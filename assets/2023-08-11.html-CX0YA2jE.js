import{_ as t}from"./hero-CbGtQ2Lh.js";import{_ as o,c as a,a as n,o as i}from"./app-CGzBYgfx.js";const r={};function s(l,e){return i(),a("div",null,e[0]||(e[0]=[n('<p><img src="'+t+'" alt="Logo"></p><h1 id="this-week-in-mojo-2023-08-11" tabindex="-1"><a class="header-anchor" href="#this-week-in-mojo-2023-08-11"><span>This Week in Mojo 2023-08-11</span></a></h1><h2 id="official-content" tabindex="-1"><a class="header-anchor" href="#official-content"><span>Official Content</span></a></h2><ul><li>New blog post: <a href="https://www.modular.com/blog/an-easy-introduction-to-mojo-for-python-programmers" target="_blank" rel="noopener noreferrer">An easy introduction to Mojo for Python programmers</a> comparing how to calculate Euclidean distance in raw Python, Numpy and Mojo.</li></ul><h2 id="team-answers" tabindex="-1"><a class="header-anchor" href="#team-answers"><span>Team Answers</span></a></h2><h3 id="null-pointers" tabindex="-1"><a class="header-anchor" href="#null-pointers"><span>Null Pointers</span></a></h3><p>We are definitely interested in introducing an <code>Option[T]</code> / <code>Optional[T]</code> type in the future, but need more traits support built out. Once we have that, we can shift to non-nullable &quot;pointers&quot; by default.</p><ul><li><a href="https://discord.com/channels/1087530497313357884/1138854784930172928/1138902579640807566" target="_blank" rel="noopener noreferrer">2023-08-10 Github Chris Lattner</a></li></ul><h3 id="linear-algebra-in-standard-library" tabindex="-1"><a class="header-anchor" href="#linear-algebra-in-standard-library"><span>Linear algebra in standard library</span></a></h3><p>We need to figure it out, but I&#39;d prefer to keep the stdlib pretty conventional and focused on &quot;normal&quot; library types like integers, strings, dictionaries, pushing things like tensors and matmul out to a linear algebra package (e.g. see Numpy not being built in). That said, I do think something like that could/should be included in the normal distro.</p><p>The Modular Engine will be different, and I expect/hope it to always be the best state of the art implementation of this stuff, but it can do so without trying to hold back other efforts!</p><ul><li><a href="https://discord.com/channels/1087530497313357884/1138051611936178228/1138176785087987773" target="_blank" rel="noopener noreferrer">2023-08-08 Discord Chris Lattner</a></li></ul><h3 id="standard-library-tensor" tabindex="-1"><a class="header-anchor" href="#standard-library-tensor"><span>Standard Library <code>Tensor</code></span></a></h3><p>The <code>Tensor</code> type is new but is also very much a work in progress. We added it because a lot of example notebooks are using very low level programming (effectively malloc+free) and need a simple owned buffer type. The initial idea is that &quot;array like&quot; names would work with arbitrary element types (e.g. you can put a üê¥ or üê∂ object in an array) but that we wanted a more &quot;numerics sounding&quot; collection that would be parameterized on DType.</p><p>Mojo is still missing a bunch of type systems features (e.g. traits etc) that will massively impact the shape and structure of the standard library, and as those come in, we&#39;ll want to significantly rethink previous decisions. Despite that, we don&#39;t want to completely hold back progress on things until all those features are available - we decided it is better to prototype some things, get experience, and be willing to reinvent / replace things over time.</p><ul><li><a href="https://discord.com/channels/1087530497313357884/1138051611936178228/1138156214983860264" target="_blank" rel="noopener noreferrer">2023-08-08 Discord Chris Lattner</a></li></ul><h3 id="why-not-build-mojo-on-top-of-swift" tabindex="-1"><a class="header-anchor" href="#why-not-build-mojo-on-top-of-swift"><span>Why not build Mojo on top of Swift?</span></a></h3><p>I&#39;m also a fan of Swift. The major issue with it is that it isn&#39;t a member of the Python family. I&#39;m confused why you think that Mojo isn&#39;t inspired by Swift, because Mojo certainly is. That said, you&#39;re right that building a new thing takes longer than leveraging an existing thing. The reason we&#39;re taking this approach is that we&#39;re optimizing for quality of result (we want to build the world&#39;s best thing) not time to market. I would consider it success if you come to love Mojo more than Swift some day üòÑ</p><ul><li><a href="https://github.com/modularml/mojo/discussions/485#discussioncomment-6647832" target="_blank" rel="noopener noreferrer">2023-08-07 Github Chris Lattner</a></li></ul>',19)]))}const c=o(r,[["render",s],["__file","2023-08-11.html.vue"]]),u=JSON.parse('{"path":"/this-week-in-mojo/2023-08-11.html","title":"This Week in Mojo 2023-08-11","lang":"en-US","frontmatter":{"date":"2023-08-11T00:00:00.000Z","author":"Mojo Dojo","author_site":"https://mojodojo.dev","author_image":"https://mojodojo.dev/hero.png","feed":true,"head":[["meta",{"name":"twitter:card","content":"summary"}],["meta",{"name":"twitter:site","content":"@mojodojodev"}],["meta",{"name":"twitter:title","content":"This Week in Mojo"}],["meta",{"name":"twitter:description","content":"This week in Mojo with language updates, community content, and everything else related to Mojo"}],["meta",{"name":"twitter:image","content":"https://mojodojo.dev/hero.png"}]]},"headers":[{"level":2,"title":"Official Content","slug":"official-content","link":"#official-content","children":[]},{"level":2,"title":"Team Answers","slug":"team-answers","link":"#team-answers","children":[{"level":3,"title":"Null Pointers","slug":"null-pointers","link":"#null-pointers","children":[]},{"level":3,"title":"Linear algebra in standard library","slug":"linear-algebra-in-standard-library","link":"#linear-algebra-in-standard-library","children":[]},{"level":3,"title":"Standard Library Tensor","slug":"standard-library-tensor","link":"#standard-library-tensor","children":[]},{"level":3,"title":"Why not build Mojo on top of Swift?","slug":"why-not-build-mojo-on-top-of-swift","link":"#why-not-build-mojo-on-top-of-swift","children":[]}]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"}]},"filePathRelative":"this-week-in-mojo/2023-08-11.md"}');export{c as comp,u as data};
