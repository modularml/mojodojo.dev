import{_ as t}from"./hero-CbGtQ2Lh.js";import{_ as o,c as n,a,o as r}from"./app-CGzBYgfx.js";const i={};function l(s,e){return r(),n("div",null,e[0]||(e[0]=[a('<p><img src="'+t+'" alt="Logo"></p><h1 id="this-week-in-mojo-2023-08-18" tabindex="-1"><a class="header-anchor" href="#this-week-in-mojo-2023-08-18"><span>This Week in Mojo 2023-08-18</span></a></h1><h2 id="official-content" tabindex="-1"><a class="header-anchor" href="#official-content"><span>Official Content</span></a></h2><ul><li>New blog post: <a href="https://www.modular.com/blog/how-mojo-gets-a-35-000x-speedup-over-python-part-1" target="_blank" rel="noopener noreferrer">How MojoðŸ”¥ gets a 35,000x speedup over Python â€“ Part 1</a></li></ul><h2 id="community-content" tabindex="-1"><a class="header-anchor" href="#community-content"><span>Community Content</span></a></h2><ul><li>Maxim made a blog post on a binary search tree implementation he&#39;s working on: <a href="https://mzaks.medium.com/a-high-level-introduction-to-fibytree-bd7f8775d815" target="_blank" rel="noopener noreferrer">A high level introduction to FibyTree</a></li></ul><h2 id="team-answers" tabindex="-1"><a class="header-anchor" href="#team-answers"><span>Team Answers</span></a></h2><h3 id="small-binary-size-for-embedded" tabindex="-1"><a class="header-anchor" href="#small-binary-size-for-embedded"><span>Small Binary Size for Embedded</span></a></h3><p>In fullness of time Mojo will be very useful for this sort of use-case. We haven&#39;t done any work on code size directly, but a statically linked hello world program produces a ~100K <code>a.out</code> file on a linux system. Mojo supports inline asm, but it is pretty ugly to use right now, we&#39;ll improve that later.</p><p>There are a lot of analogs between embedded systems and GPU/accelerator programming btw, both want effectively-no-dependence runtimes.</p><ul><li><a href="https://discord.com/channels/1087530497313357884/1139563087498842232/1139589228297199677" target="_blank" rel="noopener noreferrer">2023-08-12 Chris Lattner</a></li></ul><h3 id="onnx-runtime" tabindex="-1"><a class="header-anchor" href="#onnx-runtime"><span>ONNX Runtime</span></a></h3><p>we run benchmarks against ONNX Runtime, and in our tests, the Modular AI Engine is almost always faster than it. We may add these numbers to the public dashboard at https://performance.modular.com/ in the future.</p><ul><li><a href="https://discord.com/channels/1087530497313357884/1140700862524690632/1140733786414399608" target="_blank" rel="noopener noreferrer">2023-08-14 Alex Kirchhoff</a></li></ul>',14)]))}const h=o(i,[["render",l],["__file","2023-08-18.html.vue"]]),c=JSON.parse('{"path":"/this-week-in-mojo/2023-08-18.html","title":"This Week in Mojo 2023-08-18","lang":"en-US","frontmatter":{"date":"2023-08-18T00:00:00.000Z","author":"Mojo Dojo","author_site":"https://mojodojo.dev","author_image":"https://mojodojo.dev/hero.png","feed":true,"head":[["meta",{"name":"twitter:card","content":"summary"}],["meta",{"name":"twitter:site","content":"@mojodojodev"}],["meta",{"name":"twitter:title","content":"This Week in Mojo"}],["meta",{"name":"twitter:description","content":"This week in Mojo with language updates, community content, and everything else related to Mojo"}],["meta",{"name":"twitter:image","content":"https://mojodojo.dev/hero.png"}]]},"headers":[{"level":2,"title":"Official Content","slug":"official-content","link":"#official-content","children":[]},{"level":2,"title":"Community Content","slug":"community-content","link":"#community-content","children":[]},{"level":2,"title":"Team Answers","slug":"team-answers","link":"#team-answers","children":[{"level":3,"title":"Small Binary Size for Embedded","slug":"small-binary-size-for-embedded","link":"#small-binary-size-for-embedded","children":[]},{"level":3,"title":"ONNX Runtime","slug":"onnx-runtime","link":"#onnx-runtime","children":[]}]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"}]},"filePathRelative":"this-week-in-mojo/2023-08-18.md"}');export{h as comp,c as data};
