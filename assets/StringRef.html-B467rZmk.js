import{_ as a,c as n,a as l,o}from"./app-CGzBYgfx.js";const e={};function p(t,s){return o(),n("div",null,s[0]||(s[0]=[l(`<p>Contributed by <a href="https://github.com/Lorenzobattistela" target="_blank" rel="noopener noreferrer">Lorenzobattistela</a></p><h1 id="stringref" tabindex="-1"><a class="header-anchor" href="#stringref"><span>StringRef</span></a></h1><p>Represent a constant reference to a string, i.e. a sequence of characters and a length, which need not be null terminated.</p><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init</span></a></h2><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>a
</code></pre><p>Or specifying the pointer</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">string</span><span style="color:#89DDFF;">&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> ptr</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">data</span><span style="color:#9ABDF5;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> str_ref</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">ptr</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">str_ref</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>string
</code></pre><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">string_2</span><span style="color:#89DDFF;">&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> ptr</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">data</span><span style="color:#9ABDF5;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> length</span><span style="color:#89DDFF;"> =</span><span style="color:#0DB9D7;"> len</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> str_ref</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> length</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">str_ref</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">length</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">str_ref</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>8
string_2
</code></pre><h2 id="fields" tabindex="-1"><a class="header-anchor" href="#fields"><span>fields</span></a></h2><p><code>data</code>: A pointer to the beginning of the string data being referenced. <code>length</code>: The length of the string being referenced.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> a</span><span style="color:#89DDFF;"> :</span><span style="color:#A9B1D6;"> StringRef </span><span style="color:#89DDFF;">=</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">a</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">data</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">a</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">length</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>a
1
</code></pre><h2 id="getitem" tabindex="-1"><a class="header-anchor" href="#getitem"><span>getitem</span></a></h2><p>Get the string value at the specified position. It receives the index of the character to get. You can use the brackets notation to get the character at the specified position.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#89DDFF;">.</span><span style="color:#0DB9D7;">__getitem__</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">1</span><span style="color:#9ABDF5;">])</span></span></span></code></pre></div><pre><code>h
e
</code></pre><h2 id="equal" tabindex="-1"><a class="header-anchor" href="#equal"><span>equal</span></a></h2><p>Compares two strings are equal.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> y</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#89DDFF;">.</span><span style="color:#0DB9D7;">__eq__</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">y</span><span style="color:#9ABDF5;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x </span><span style="color:#BB9AF7;">==</span><span style="color:#C0CAF5;"> y</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>True
True
</code></pre><h2 id="not-equal" tabindex="-1"><a class="header-anchor" href="#not-equal"><span>not equal</span></a></h2><p>Compares two strings are not equal.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> y</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#89DDFF;">.</span><span style="color:#0DB9D7;">__ne__</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">y</span><span style="color:#9ABDF5;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x </span><span style="color:#BB9AF7;">!=</span><span style="color:#C0CAF5;"> y</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>False
False
</code></pre><h2 id="length" tabindex="-1"><a class="header-anchor" href="#length"><span>length</span></a></h2><p>Returns the length of the string.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> StringRef</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#89DDFF;">.</span><span style="color:#0DB9D7;">__len__</span><span style="color:#9ABDF5;">())</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#0DB9D7;">len</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>5
5
</code></pre>`,31)]))}const c=a(e,[["render",p],["__file","StringRef.html.vue"]]),i=JSON.parse('{"path":"/guides/builtins/StringRef.html","title":"StringRef","lang":"en-US","frontmatter":{"title":"StringRef","categories":"Builtins","usage":"Represent a constant reference to a string, i.e. a sequence of characters and a length, which need not be null terminated."},"headers":[{"level":2,"title":"init","slug":"init","link":"#init","children":[]},{"level":2,"title":"fields","slug":"fields","link":"#fields","children":[]},{"level":2,"title":"getitem","slug":"getitem","link":"#getitem","children":[]},{"level":2,"title":"equal","slug":"equal","link":"#equal","children":[]},{"level":2,"title":"not equal","slug":"not-equal","link":"#not-equal","children":[]},{"level":2,"title":"length","slug":"length","link":"#length","children":[]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"},{"name":"Jack Clayton","username":"Jack Clayton","email":"jackos@me.com","commits":1,"url":"https://github.com/Jack Clayton"}]},"filePathRelative":"guides/builtins/StringRef.md"}');export{c as comp,i as data};
