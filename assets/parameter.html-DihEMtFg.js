import{_ as n,c as l,a as o,d as e,r as p,o as t}from"./app-CGzBYgfx.js";const c={};function r(i,s){const a=p("CommentService");return t(),l("div",null,[s[0]||(s[0]=o(`<h1 id="parameter" tabindex="-1"><a class="header-anchor" href="#parameter"><span>@parameter</span></a></h1><h2 id="if-statement" tabindex="-1"><a class="header-anchor" href="#if-statement"><span>if statement</span></a></h2><p>This will cause the <code>if</code> statement to run at compile time, there is no runtime performance cost because the path that doesn&#39;t run will be excluded from the final binary:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> TargetInfo </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> os_is_linux</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#7AA2F7;">parameter</span></span></span>
<span class="line"><span class="line"><span style="color:#BB9AF7;">if</span><span style="color:#7AA2F7;"> os_is_linux</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">    print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">this will be included in the binary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#BB9AF7;">else</span><span style="color:#89DDFF;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">    print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">this will be eliminated from compilation process</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><pre><code>this will be included in the binary
</code></pre><h2 id="function" tabindex="-1"><a class="header-anchor" href="#function"><span>function</span></a></h2><p>This will run at compile time, so that you pay no runtime price for anything inside the function:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#BB9AF7;">fn</span><span style="color:#7AA2F7;"> add_print</span><span style="color:#9ABDF5;">[</span><span style="color:#E0AF68;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A9B1D6;"> Int</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A9B1D6;"> Int</span><span style="color:#9ABDF5;">]():</span><span style="color:#A9B1D6;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#89DDFF;">    @</span><span style="color:#7AA2F7;">parameter</span></span></span>
<span class="line"><span class="line"><span style="color:#BB9AF7;">    fn</span><span style="color:#7AA2F7;"> add</span><span style="color:#9ABDF5;">[</span><span style="color:#E0AF68;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A9B1D6;"> Int</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A9B1D6;"> Int</span><span style="color:#9ABDF5;">]()</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#A9B1D6;"> Int</span><span style="color:#9ABDF5;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#BB9AF7;">        return</span><span style="color:#A9B1D6;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A9B1D6;"> b</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">    let</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> add</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> b</span><span style="color:#9ABDF5;">]()</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">    print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A9B1D6;">add_print</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">5</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 10</span><span style="color:#9ABDF5;">]()</span></span></span></code></pre></div><pre><code>15
</code></pre><p>What this essentially translates to is:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#BB9AF7;">fn</span><span style="color:#7AA2F7;"> add_print</span><span style="color:#9ABDF5;">():</span><span style="color:#A9B1D6;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">    let</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 15</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">    print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#7AA2F7;">add_print</span><span style="color:#9ABDF5;">()</span></span></span></code></pre></div><pre><code>15
</code></pre><p>The <code>add</code> calculation ran at compile time, so those extra instructions don&#39;t happen at runtime</p>`,13)),e(a)])}const F=n(c,[["render",r],["__file","parameter.html.vue"]]),D=JSON.parse('{"path":"/guides/decorators/parameter.html","title":"@parameter","lang":"en-US","frontmatter":{"usage":"Causes the function or if statement to run at compile time"},"headers":[{"level":2,"title":"if statement","slug":"if-statement","link":"#if-statement","children":[]},{"level":2,"title":"function","slug":"function","link":"#function","children":[]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"},{"name":"Jack Clayton","username":"Jack Clayton","email":"jackos@me.com","commits":1,"url":"https://github.com/Jack Clayton"}]},"filePathRelative":"guides/decorators/parameter.md"}');export{F as comp,D as data};
