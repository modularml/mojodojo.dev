import{_ as n,c as o,a as l,d as p,r as e,o as t}from"./app-CGzBYgfx.js";const r={};function c(i,s){const a=e("CommentService");return t(),o("div",null,[s[0]||(s[0]=l(`<p>Contributed by <a href="https://github.com/gautam-e" target="_blank" rel="noopener noreferrer">gautam</a></p><h1 id="random" tabindex="-1"><a class="header-anchor" href="#random"><span>Random</span></a></h1><p>Provides functions for random numbers</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Random </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> rand</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> randint</span></span></span>
<span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Pointer </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> DTypePointer</span></span></span>
<span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> DType </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> DType</span></span></span>
<span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Memory </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> memset_zero</span></span></span></code></pre></div><p>Let&#39;s create a two variables to store new addresses on the heap and allocate space for 8 values, note the different <code>DType</code>:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> p1</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> DTypePointer</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">uint8</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">alloc</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> p2</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> DTypePointer</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">float32</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">alloc</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><p>Zero them to ensure we don&#39;t read garbage memory:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7AA2F7;">memset_zero</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">p1</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 8</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#7AA2F7;">memset_zero</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">p2</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 8</span><span style="color:#9ABDF5;">)</span></span></span></code></pre></div><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">values at p1:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> p1</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">simd_load</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">](</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">values at p2:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> p2</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">simd_load</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">](</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>values at p1: [0, 0, 0, 0, 0, 0, 0, 0]
values at p2: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
</code></pre><h2 id="rand" tabindex="-1"><a class="header-anchor" href="#rand"><span>rand</span></a></h2><p>Fill with 8 random numbers:</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A9B1D6;">rand</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">uint8</span><span style="color:#9ABDF5;">](</span><span style="color:#7AA2F7;">p1</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 8</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#A9B1D6;">rand</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">float32</span><span style="color:#9ABDF5;">](</span><span style="color:#7AA2F7;">p2</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 8</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">values at p1:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> p1</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">simd_load</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">](</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">values at p2:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> p2</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">simd_load</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">](</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>values at p1: [171, 1, 98, 17, 106, 175, 150, 238]
values at p2: [0.066842235624790192, 0.68677270412445068, 0.93043649196624756, 0.52692878246307373, 0.65391898155212402, 0.70119059085845947, 0.76219803094863892, 0.047464512288570404]
</code></pre><h2 id="randint" tabindex="-1"><a class="header-anchor" href="#randint"><span>randint</span></a></h2><p>Fill memory with integer values within a range, e.g. 0 to 10.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#A9B1D6;">randint</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">uint8</span><span style="color:#9ABDF5;">](</span><span style="color:#7AA2F7;">p1</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 8</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 10</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">p1</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">simd_load</span><span style="color:#9ABDF5;">[</span><span style="color:#FF9E64;">8</span><span style="color:#9ABDF5;">](</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>[9, 5, 1, 7, 4, 7, 10, 8]
</code></pre><h2 id="random-float64" tabindex="-1"><a class="header-anchor" href="#random-float64"><span>random_float64</span></a></h2><p>Returns a single random <code>Float64</code> value within a specified range e.g 0.0 to 1.0.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Random </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> random_float64</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">random_float64</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">0.0</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 1.0</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>0.32823422616000769
</code></pre><h2 id="random-si64" tabindex="-1"><a class="header-anchor" href="#random-si64"><span>random_si64</span></a></h2><p>Returns a single random <code>Int64</code> value within a specified range e.g -10 to +10.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Random </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> random_si64</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">random_si64</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">-</span><span style="color:#FF9E64;">10</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 10</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>-8
</code></pre><h2 id="random-ui64" tabindex="-1"><a class="header-anchor" href="#random-ui64"><span>random_ui64</span></a></h2><p>Returns a single random <code>UInt64</code> value within a specified range e.g 0 to 10.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Random </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> random_ui64</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">random_ui64</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">0</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 10</span><span style="color:#9ABDF5;">))</span></span></span></code></pre></div><pre><code>2
</code></pre>`,30)),p(a)])}const y=n(r,[["render",c],["__file","Random.html.vue"]]),d=JSON.parse('{"path":"/guides/std/Random.html","title":"Random","lang":"en-US","frontmatter":{"title":"Random","categories":"Random","usage":"Provides functions for random numbers"},"headers":[{"level":2,"title":"rand","slug":"rand","link":"#rand","children":[]},{"level":2,"title":"randint","slug":"randint","link":"#randint","children":[]},{"level":2,"title":"random_float64","slug":"random-float64","link":"#random-float64","children":[]},{"level":2,"title":"random_si64","slug":"random-si64","link":"#random-si64","children":[]},{"level":2,"title":"random_ui64","slug":"random-ui64","link":"#random-ui64","children":[]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"},{"name":"Jack Clayton","username":"Jack Clayton","email":"jackos@me.com","commits":1,"url":"https://github.com/Jack Clayton"}]},"filePathRelative":"guides/std/Random.md"}');export{y as comp,d as data};
