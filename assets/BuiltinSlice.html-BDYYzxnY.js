import{_ as a,c as n,a as l,o as e}from"./app-CGzBYgfx.js";const o={};function p(t,s){return e(),n("div",null,s[0]||(s[0]=[l(`<p>Contributed by <a href="https://github.com/Lorenzobattistela" target="_blank" rel="noopener noreferrer">Lorenzobattistela</a></p><h1 id="slice" tabindex="-1"><a class="header-anchor" href="#slice"><span>slice</span></a></h1><p>Represents a slice expression. Objects of this type are generated when slice syntax <code>[a:b:c]</code> is used.</p><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init</span></a></h2><p>We can initialize slices by specifying where it should stop. If we don&#39;t specify a start, it will default to 0. If we don&#39;t specify a step, it will default to 1. The step is the number of elements to skip between each element.</p><div class="language-mojo" data-highlighter="prismjs" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6 language-mojo;"><code><span class="line"><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> String </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> String</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> String</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">slice it!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> a</span><span style="color:#89DDFF;"> :</span><span style="color:#0DB9D7;"> slice</span><span style="color:#89DDFF;"> =</span><span style="color:#0DB9D7;"> slice</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">5</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> b</span><span style="color:#89DDFF;"> :</span><span style="color:#0DB9D7;"> slice</span><span style="color:#89DDFF;"> =</span><span style="color:#0DB9D7;"> slice</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">5</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 9</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> c</span><span style="color:#89DDFF;"> :</span><span style="color:#0DB9D7;"> slice</span><span style="color:#89DDFF;"> =</span><span style="color:#0DB9D7;"> slice</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">1</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> 2</span><span style="color:#9ABDF5;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">[</span><span style="color:#C0CAF5;">a</span><span style="color:#9ABDF5;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">[</span><span style="color:#C0CAF5;">b</span><span style="color:#9ABDF5;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#0DB9D7;">print</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">[</span><span style="color:#C0CAF5;">c</span><span style="color:#9ABDF5;">])</span></span></span></code></pre></div><pre><code>slice
 it!
lc
</code></pre>`,7)]))}const i=a(o,[["render",p],["__file","BuiltinSlice.html.vue"]]),r=JSON.parse('{"path":"/guides/builtins/BuiltinSlice.html","title":"BuiltinSlice","lang":"en-US","frontmatter":{"title":"BuiltinSlice","categories":"Builtins","usage":"Implements slice."},"headers":[{"level":2,"title":"init","slug":"init","link":"#init","children":[]}],"git":{"contributors":[{"name":"Mojo Dojo","username":"Mojo Dojo","email":"mojodojodev@gmail.com","commits":1,"url":"https://github.com/Mojo Dojo"},{"name":"Jack Clayton","username":"Jack Clayton","email":"jackos@me.com","commits":1,"url":"https://github.com/Jack Clayton"}]},"filePathRelative":"guides/builtins/BuiltinSlice.md"}');export{i as comp,r as data};
